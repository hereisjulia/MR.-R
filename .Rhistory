char1
day
char2
str_c(month,char1,day,char2)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
as.interger(year1)
year2<-as.interger(year1)
year2<-as.integer(year1)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(lubridate)
install.packages("stringr")
course <- c("個體經濟學","投資學","總體經濟學")
course
str_subset(course,"經濟學")
str_detect(course,"經濟學")
studentID<-c(
'410177115','410176080','410174233','410177011','410182045','410176014')
str_sub(studentID,5,6) #學系號
str_sub(studentID,2,4) #學年
month<-c("3","4","2")
day<-c("11","5","7")
char1 <- c("月","月","月")
char2 <- c("日","日","日")
month
char1
day
char2
str_c(month,char1,day,char2)
str_c(month,c("月"),day,c("日"))
str_c(month,"月",day,"日")
month
day
str_c(month,day, sep="-")
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
dates
str_replace(dates,"-","月")
dates2 <- c("3-11-2019", "4-5-2017",  "2-7-2015")
dates2
str_replace(dates2,"-","/")
str_replace_all(dates2,"-","/")
library(readr)
githubData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/githubData.csv")
username <- githubData$`GitHub username`[11:16]
reponame <- githubData$`GitHub repo name`[11:16]
"https://github.com"
username[1:2]
reponame[1:2]
str_c("https://github.com",username[1:2],reponame[1:2],sep="/")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
birthday<-filmVotingData$`出生西元年月日（驗證本人用）`
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "UTF-8")
year<-str_sub(birthday,1,4)
month<-str_sub(birthday,5,6)
day<-str_sub(birthday,7,8)
head(str_c("西元",year,"年",month,"月",day,"日"))
time1<-c("099/01","099/02","099/03")
class(time1)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year2<-as.integer(year1)
year2<-as.integer(year1)+1911
str_c("西元",year2,"年",month1,"月")
knitr::opts_chunk$set(echo = TRUE)
class(date)
class(date)
library(lubridate)
date<- ymd(date)
library(readr)
exData2 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData2.csv")
date <- as.character(exData2$期間)
currency <- exData2$幣別
exchangeRate <- exData2$匯率
head(date)
class(date)
library(lubridate)
date<- ymd(date)
class(date)
head(date)
class(date)
class(date)
head(as.integer(date))
head(as.integer(date))
as.integer(ymd("1980-08-01"))
head(as.integer(date))
as.integer(ymd("1980-08-01"))
head(as.integer(date))
head(as.integer(date))
as.integer(ymd("1980-08-01"))
head(date >=ymd("1980-08-01"))
isAfter19800801 <-
date >= ymd("1980-08-01")
isAfte19800801
isAfter19800801 <-
date >= ymd("1980-08-01")
isAfter19800801
class(isAfter19800801)
sum(isAfter19800801)
head(currency)
head(currency = "歐元USD/EUR")
head(currency == "歐元USD/EUR")
head(currency == "歐元USD/EUR")
isEURO <- currency=="歐元USD/EUR"
sum(isEURO)
isExchangeRateNA <-
is.na(exchangeRate)
sum(isExchangeRateNA)
isNotNA <- !is.na(exchangeRate)
isNotNA <- !is.na(exchangeRate)
isEuro <- currency== "歐元USD/EUR"
isNotNA <- !is.na(exchangeRate)
isEuro <- currency== "歐元USD/EUR"
satisfyBoth <- isNotNA & isEuro
sum(satisfyBoth)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
courseType <- transcriptDataFinal$`必選修類別（必∕選∕通）`
major <- transcriptDataFinal$學系
studentID <- transcriptDataFinal$學號
grade <- transcriptDataFinal$學期成績
sum(major=="經濟學系")
courseType(studentID="5bdS6977b")
sum(studentID="5bdS6977b")
sum(studentID=="5bdS6977b")
sum( studentID=="5bdS6977b" & grade >=60)
sum( major=="經濟學系" & courseType=="選")
sum( major=="經濟學系" & courseType=="必")
sum( major=="經濟學系" & courseType=="必" & grade<60)
"分子"/"分母"
sum( major=="經濟學系" & courseType=="必") ->"分母"
"分子"/"分母"
(sum( major=="經濟學系" & courseType=="必")) ->"分母"
(sum( major=="經濟學系" & courseType=="必" & grade<60))->"分子"
sum( major=="經濟學系" & courseType=="必")->"分母"
"分母"
sum( major=="經濟學系" & courseType=="必" & grade<60)->"分子"
"分子"
sum( major=="經濟學系" & courseType=="必") ->"分母"
"分母"
sum( major=="經濟學系" & courseType=="必" & grade<60)->"分子"
"分子"
sum(
major=="經濟學系" &
courseType=="必") ->"分母"
"分母"
sum(
major=="經濟學系" &
courseType=="必")
sum( major=="經濟學系" &
courseType=="必" &
grade<60)
sum(
major=="經濟學系" &
courseType=="必") ->b
(sum(
major=="經濟學系" &
courseType=="必") )->b
sum( major=="經濟學系" &
courseType=="必" &
grade<60
) ->a
sum(
major=="經濟學系" &
courseType=="必"
) ->b
a/b
install.packages("stringr")
knitr::opts_chunk$set(echo = TRUE)
your_github_username <- "hereisjulia"
your_practice_reponame <- "MR.-R"
library(httr)
library(stringr)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
ymd_hms(commitDate) -> commitDate
your_github_username <- "hereisjulia"
your_practice_reponame <- "MR.-R"
library(httr)
library(stringr)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
ymd_hms(commitDate) -> commitDate
ymd_hms (commitDate) -> commitDate
ymd_hms(commitDate) -> commitDate
ymd_hms(commitDate) -> commitDate
your_github_username <- "hereisjulia"
your_practice_reponame <- "MR.-R"
library(httr)
library(stringr)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
library(stringr)
commitCheck   >是個list vestor
library(stringr)
commitCheck
ymd_hms(commitDate) -> commitDate
your_github_username <- "hereisjulia"
your_practice_reponame <- "MR.-R"
library(httr)
library(stringr)
library(lubridate)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
your_github_username <- "hereisjulia"
your_practice_reponame <- "MR.-R"
library(httr)
library(stringr)
library(lubridate)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
ymd_hms(commitDate) -> commitDate
ymd_hms(commitDate) -> commitDate
commitCheck[[4]][[3]][[2]][[3]]
commitDate <- commitCheck[[4]][[3]][[2]][[3]]
ymd_hms(commitDate) -> commitDate
ymd_hms(commitDate) -> commitDate
ymd_hms(commitDate) -> commitDate
with_tz(commitDate,tzone = "Asia/Taipei")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
View(filmVotingData)
library(stringr)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
logiCorrect <- str_length(birthday)
logiCorrect <- str_length(birthday)==8
logiCorrect <- str_length(birthday)==8
logiCorrect
favoriteTwo[logiCorrect] ->validFavoritTwo
favoriteTwo[logiCorrect] ->validFavoritTwo
validFavoritTwo
library(lubridate)
library(stringr)
library(dplyr)
install.packages("dplyr")
library(lubridate)
library(stringr)
library(dplyr)
library(lubridate); library(stringr); library(dplyr)
library(lubridate)
library(stringr)
library(dplyr)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord[c(4)] <- c("平均成績")
studentRecord[c(4)] <- c("平均成績")
studentRecord
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord
names(studentRecord)[c(4)] <- c("平均成績")
studentRecord
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord
studentRecord[[4]]
names(studentRecord[[4]])
studentRecord[[4]]
names(studentRecord[[4]]) <- c("一","二","三","四")
studentRecord[[4]]
names(studentRecord[[4]]) <- c("一","二","三","四")
studentRecord
library(httr)
library(httr)
commitCheck <- content(GET("https://api.github.com/repos/rstudio/rstudio/commits"))
View(commitCheck)
commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date
commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date
commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
class(commit8Date)
commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date
class(commit8Date)
commitCheck[[8]][["commit"]][["committer"]][["date"]][[1]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]][[1]]
commit8Date
class(commit8Date)
commitCheck[[8]][["commit"]][["committer"]][["date"]][[1]]
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]][[1]]
class(commit8Date)
commit8Date
library(lubridate)
ymd_hms(commit8Date) -> commit8Date
with_tz(commit8Date, tzone = "Asia/Taipei")
library(lubridate)
ymd_hms(commit8Date) -> commit8Date
with_tz(commit8Date, tzone = "Asia/Taipei")
commit8Date
library(lubridate)
ymd_hms(commit8Date) -> commit8Date
with_tz(commit8Date, tzone = "Asia/Taipei") -> commit8Date
commit8Date
length(commitCheck)
names(commitCheck[c(1:5)])
names(commitCheck)c(1:30) <- c(commit 1:30)
names(commitCheck) <- c(commit 1:30)
names(commitCheck) <- c(commit1)
names(commitCheck) <- c(1:30)
names(commitCheck) <- c(1:30)
commitCheck
names(commitCheck) <- c(commit"1:30")
names(commitCheck) <- c("commit"1:30)
names(commitCheck) <- c("commit" 1:30)
library(purrr)
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
library(purrr)
library(purrr)
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
unlist(allCommitDatesList)
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
unlist(allCommitDatesList)
class(allCommitDatesList)
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
unlist(allCommitDatesList) -> allCommitDatesList
class(allCommitDatesList)
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
unlist(allCommitDatesList) -> allCommitDatesList
class(allCommitDatesList)
allCommitDatesList
ymd_hms(allCommitDatesList) -> allCommitDatesList
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei")
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei") ->allCommitDatesList
allCommitDatesList
hour(allCommitDatesList)
hour(allCommitDatesList)
minute(allCommitDatesList)
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
4<=H<=6
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H>=6
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H>=6 & H<=4
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H<=6 & H>=4
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M>=30) ->b
(H=6 & M<=30) ->c
a&b&c
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
a!b!c
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
a &!b &!c
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei") ->allCommitDatesTW
allCommitDatesTW
hour(allCommitDatesTW) ->H
minute(allCommitDatesTW) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
(a &!b &!c) -> logicWithinTimeFrame
logicWithinTimeFrame
hour(allCommitDatesTW) ->H
minute(allCommitDatesTW) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
(a &!b &!c) -> logicWithinTimeFrame
logicWithinTimeFrame
library(readr)
install.packages("readr")
library(readr)
library(readr)
library(readr)
install.packages("readr")
library(readr)
library(readr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptData)
names(transcriptData) -> variableNames
names(transcriptData) -> variableNames
variableNames
names(transcriptData) -> variableNames
class(variableNames)
names(transcriptData) -> variableNames
class(variableNames)
variableNames
transcriptData[3]=="經濟學系"
transcriptData[3]
transcriptData[3]=="經濟學系"
transcriptData[3]=="經濟學系" ->logicFromEcon
logicFromEcon
transcriptData[c(1,7,8)
transcriptData[c(1,7,8)]
transcriptData[c(1,7,8)] -> transcriptPartialData
transcriptData[c(1,7,8)] -> transcriptPartialData
transcriptPartialData
transcriptPartialData & logicFromEcon
names(transcriptData) -> variableNames
class(variableNames)
variableNames
transcriptData[c(1,3,7,8)]
logicFromEcon
logicFromEcon
logicFromEcon==T
sum(logicFromEcon==T)
sum(logicFromEcon==F)
transcriptPartialData
transcriptData(transcriptData)
transcriptData[logicFromEcon]
