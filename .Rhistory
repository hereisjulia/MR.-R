b <- sum(majorEco & courseType=="必")
a/b
library(stringr)
install.packages("stringr")
library(stringr)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
birthday<-filmVotingData$`出生西元年月日（驗證本人用）`
head(birthday)
?str_sub
head(str_sub(birthday, start = 1, end = 4))
years <- str_sub(birthday, start = 1, end = 4)
years <- str_sub(birthday, start = 1, end = 4)
month <- str_sub(birthday, start = 5, end = 6)
day <- str_sub(birthday, start = 7, end = 8)
str_c("西元", years,"年",month,"月",day,"日")
head(str_c("西元", years,"年",month,"月",day,"日"))
str_c(民國年月, start = 1, end = 3)
str_split(民國年月,"/")
knitr::opts_chunk$set(echo = TRUE)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1
month1
str_sub(民國年月,1,3)
str_sub(民國年月,1,3)
str_sub(民國年月,5,6)
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1 + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1 + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year2 <- as.integer(year1) + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year2 <- as.integer(year1) + 1911
year2
month1
str_c("西元",year2,"年",month1,"月")
EBirthday <- str_c("西元",year2,"年",month1,"月")
class(EBirthday)
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday <- as.date(EBirthday)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2, "-" ,month1,)
EBirthday <- str_c(year2,"-",month1)
library(lubridate)
EBirthday <- ym(EBirthday)
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday
b1<-list("a","b",c(1:10))
typeof(b1)
a<-c(1:3)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
a<-c(
a1=1,
a2=2,
a3=3
)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1,3,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord[[2]]
studentRecord[[4]][[3]]
studentRecord[[4]][[3]]
class(studentRecord[[4]][[3]])
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
str_length(birthday) ==8
str_length(birthday) ==8
logiCorrect <- str_length(birthday) ==8
logiCorrect <- str_length(birthday) ==8
logiCorrect
logiCorrect <- str_length(birthday) ==8
logiCorrect
View(filmVotingData)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
rightBirthday <- favoriteTwo[[logiCorrect]]
rightBirthday <- favoriteTwo[logiCorrect]
rightBirthday
favoriteTwo[logiCorrect]
favoriteTwo[logiCorrect]
favoriteTwo[logiCorrect]
logiCorrect <- str_length(birthday) ==8
logiCorrect
rightFavor <- favoriteTwo[logiCorrect]
rightFavor <- favoriteTwo[logiCorrect]
rightFavor <- favoriteTwo[logiCorrect]
rightFavor
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
str_sub(timeStamp,11,12)
str_sub(timeStamp,11:12)
str_sub(timeStamp,11)
timeOut <- str_sub(timeStamp,11)
library(lubridate)
stay <-  "01:00:00" <= timeOut <= "05:00:00"
str_split(timestamp, ":")
timeStamp
head(timeStamp)
str_split(timeStamp, ":")
a<-c(
a1=1,
a2=2,
a3=3
)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord[[2]]
studentRecord[[4]][[3]]
class(studentRecord[[4]][[3]])
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
logiCorrect <- str_length(birthday) ==8
logiCorrect
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
head(timeStamp)
str_split(timeStamp,"/", ":")
str_split(timeStamp, ":")
time1 <- str_split(timeStamp, ":")
str_sub <- (time1, 11,12)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 11,12)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 14,15)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 14:15)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 11:12)
head(timeStamp)
library(lubridate)
timeStamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timeStamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
as.integer(mdy_hms("12/28/2017 01:00:00"))
as.integer(timestamp)
A <= as.integer(timestamp) <= B
A <= as.integer(timestamp) <= B
A <= as.integer(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
A <- as.integer(mdy_hms("12/28/2017 01:00:00"))
B <- as.integer(mdy_hms("12/28/2017 05:00:00"))
A <= as.integer(timestamp)
(A <= as.integer(timestamp)) & (B >= as.integer(timestamp))
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
hours(timestamp,11,12)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
hours <- str_sub(timestamp,11,12)
str_sub(timestamp,11,12)
data.frame(
公司名稱 = event$公司名稱,
)
event <- finStatement[(finStatement$`營業利益（損失）`>0 &
finStatement$`基本每股盈餘（元）`<0)|
(finStatement$`營業利益（損失）`<0 &
finStatement$`基本每股盈餘（元）`>0),]
library(lubridate)
library(stringr)
library(purrr)
library(readr)
library(readr)
finStatement <- read_csv("http://mopsfin.twse.com.tw/opendata/t187ap06_O_ci.csv")
finStatement
class(finStatement)
nonprofit <- finStatement[finStatement$`營業利益（損失）`<0,]
loss1Companies <- nonprofit$公司名稱
class(loss1Companies)
loss1Companies
nooo <- finStatement[finStatement$`基本每股盈餘（元）`<0,]
loss2Companies <- nooo$公司名稱
class(loss2Companies)
loss2Companies
event <- finStatement[(finStatement$`營業利益（損失）`>0 &
finStatement$`基本每股盈餘（元）`<0)|
(finStatement$`營業利益（損失）`<0 &
finStatement$`基本每股盈餘（元）`>0),]
only1LossCompanies <- event$公司名稱
only1LossCompanies
data.frame(event$公司名稱,)
data.frame(
公司名稱 = event$公司名稱,)
data.frame(
公司名稱 = event$公司名稱)
# subsample
subsample <- data.frame(
公司名稱 = event$公司名稱)
subsample
valid_commit_count <- function(username,reponame,wday,startHour,endHour){
str_replace_all(
"https://api.github.com/repos/r-hub/cranlogs/commits",
c(
"r-hub"=username,
"cranlogs"=reponame
)
) -> commitCheckStatement
commitHistory <- content(GET(commitCheckStatement))
library(purrr)
map_dfr(commitHistory,commit_df_fun) -> df_allCommits
df_allCommits
df_allCommits$samePerson<-df_allCommits$author==df_allCommits$commiter
df_allCommits$samePerson
library(lubridate)
df_validCommits$commitDate<-ymd_hms(df_validCommits$commitDate, tz="UTC")
df_validCommits$commitDate<-with_tz(df_validCommits$commitDate,tz="Asia/Taipei")
class(df_validCommits$commitDate)
df_validCommits$commitDate
df_validCommits$hh<-hour(df_validCommits$commitDate)
df_validCommits$hh
df_validCommits$date<-date(df_validCommits$commitDate)
df_validCommits$date
df_validCommits$weekday<-wday(df_validCommits$commitDate)
df_validCommits$weekday<-as.integer(df_validCommits$weekday)
df_validCommits$weekday
df_validCommits$validCommit <- (wday <= df_validCommits$weekday & df_validCommits$weekday <= wday) & (startHour <= df_validCommits$hh & df_validCommits$hh <= endHour)
class(df_validCommits$validCommit)
df_validCommits$validCommit
df_validCommitsSubsample<-df_validCommits[a&b,]
df_validCommitsSubsample
validCounts<-length(unique(df_validCommitsSubsample$date))
validCounts
return(validCounts)
}
valid_commit_count
names(Mat1)
names(matObj1)
Mat1 <- matrix(
c(1:6), 2,3
)
Mat1
Mat2 <- matrix(
c("a","b","c","d"), 2, 2
)
Mat2
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
as.data.frame(StuDF,stringsAsFactors = F) -> StuDF1
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
matObj1[8]
matObj1[3,2] #兩者相同(因此matrix中有順序)
matObj1[,3]  #ex.1
StuDF[4,3]
StuDF[4,c("成績")] #ex.2
names(Mat1)
names(Mat1)
names(Mat1) <- letters[1:6]
names(Mat1)
names(Mat1) <- letters[1:6]
names(Mat1)
colnames(StuDF) <- c("StudentID", "Name", "Grade")
names(StuDF)
colnames(StuDF) <- c("StudentID", "Name", "Grade")
names(StuDF)
StuDF
Mat1
names(Mat1) #原為NULL
names(Mat1) <- letters[1:6]
names(Mat1)
StuDF[c(3,5),c(1,3)]
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE)
b[[3]] <- FALSE
b[[5]] <- 5
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE)
b[[3]] <- FALSE
b[[5]] <- 5
b
b$元素2 <- "Hi"
b$新成員 <- c(2,5,1)
b
b$元素2 <- "Hi"
b$新成員 <- c(2,5,1)
b
class(b$新成員)
b$元素2 <- "Hi"
b$新成員 <- c(2,5,1)
b
b$新成員 <- as.integer(c(2,5,1))
b$元素2 <- "Hi"
b$新成員 <- as.integer(c(2,5,1))
class(b$新成員)
b
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
exData3$期間
library(lubridate)
exData3$期間 <- ymd(exData3$期間)
library(lubridate)
exData3$期間 <- ymd(exData3$期間)
class(exData3$期間)
exData3$期間>="1997-06-01"
exData3$isAsiaCrisis <- exData3$期間>="1997-06-01" & exData3$期間<="1997-12-01"
exData3$isAsiaCrisis <- exData3$期間>="1997-06-01" & exData3$期間<="1997-12-01"
exData3$isAsiaCrisis
exData3$isAsiaCrisis <- exData3$期間>="1997-06-01" & exData3$期間<="1997-12-01"
exData3
exData3$isAsiaCrisis[exData3$isAsiaCrisis=T,]
exData3$isAsiaCrisis[exData3$isAsiaCrisis==T,]
exData3$isAsiaCrisis[,exData3$isAsiaCrisis=T]
exData3$isAsiaCrisis[,exData3$isAsiaCrisis==T]
exData3$isAsiaCrisis[exData3$isAsiaCrisis==T,c(1:3)]
exData3$isAsiaCrisis[exData3$isAsiaCrisis=T,c(1:3)]
exData3[exData3$isAsiaCrisis=T,c(1:3)]
exData3[exData3$isAsiaCrisis==T,c(1:3)]
exData3[exData3$isAsiaCrisis==T,]
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF$成績-5
StuDF$成績 <- StuDF$成績-5
StuDF["及格"] <- StuDF["成績"] >= 65
StuDF["及格"] <- StuDF["成績"] >= 65
StuDF$及格
StuDF["及格"] <- StuDF["成績"] >= 65
class(StuDF$及格)
StuDF["及格"] <- as.logical( StuDF["成績"] >= 65)
StuDF["及格"] <- as.logical( StuDF["成績"] >= 65)
StuDF$及格
library(readr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
dim(classSurvey)
library(readr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
classSurvey
dim(classSurvey)
classSurvey$學號[[4]]
dim(classSurvey)
classSurvey$學號[[4]][[4]]
dim(classSurvey)
dim(classSurvey)
class(classSurvey$學號)
dim(classSurvey)
classSurvey$學號[,,,T,,,,,]
utility_cobb_douglass <- function(x,y,.alpha,.beta){
utilValue <- x^.alpha*y^.beta # 程序產生output值
return(utilValue) # 傳回output值
}
class(utility_cobb_douglass)
class(utility_cobb_douglass)
utility_cobb_douglass(1,2,0.5,0.8)
supply_fun() <- function(a,b,P){
Qs=a+b∗P
supply_fun <- function(a,b,P){
Qs <- a+b∗P
supply_fun <- function(a,b,P){
Qs <- a+ (b*P)
return(Qs)
}
demand_fun <- function(c,d,P){
Qd <- c− (d*P)
demand_fun <- function(c,d,P){
Qd <- c− (d*P)
demand_fun <- function(c,d,P){
Qd <- c- (d*P)
return(Qd)
}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
Copy
Copy
library(stringr)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
library(stringr); library(lubridate)
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
date_convert_twYM <- function(x){
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
date_convert_twYM <- function(x){
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
date_convert_twYM(twDates)
date_convert_twYM <- function(x){
yyyymmdd <- ymd(str_c(yyyy,mm,sep="-"))
return(yyyymmdd)
}
date_convert_twYM(twDates)
date_convert_twYM <- function(x){
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
date_convert_twYM(twDates)
