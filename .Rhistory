library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
unlist(allCommitDatesList) -> allCommitDatesList
class(allCommitDatesList)
allCommitDatesList
ymd_hms(allCommitDatesList) -> allCommitDatesList
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei")
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei") ->allCommitDatesList
allCommitDatesList
hour(allCommitDatesList)
hour(allCommitDatesList)
minute(allCommitDatesList)
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
4<=H<=6
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H>=6
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H>=6 & H<=4
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
H<=6 & H>=4
logicWithinTimeFrame
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M>=30) ->b
(H=6 & M<=30) ->c
a&b&c
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
a!b!c
hour(allCommitDatesList) ->H
minute(allCommitDatesList) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
a &!b &!c
library(lubridate)
ymd_hms(allCommitDatesList) -> allCommitDatesList
with_tz(allCommitDatesList, tzone = "Asia/Taipei") ->allCommitDatesTW
allCommitDatesTW
hour(allCommitDatesTW) ->H
minute(allCommitDatesTW) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
(a &!b &!c) -> logicWithinTimeFrame
logicWithinTimeFrame
hour(allCommitDatesTW) ->H
minute(allCommitDatesTW) ->M
(H<=6 & H>=4) ->a
(H=4 & M<=30) ->b
(H=6 & M>=30) ->c
(a &!b &!c) -> logicWithinTimeFrame
logicWithinTimeFrame
library(readr)
install.packages("readr")
library(readr)
library(readr)
library(readr)
install.packages("readr")
library(readr)
library(readr)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptData)
names(transcriptData) -> variableNames
names(transcriptData) -> variableNames
variableNames
names(transcriptData) -> variableNames
class(variableNames)
names(transcriptData) -> variableNames
class(variableNames)
variableNames
transcriptData[3]=="經濟學系"
transcriptData[3]
transcriptData[3]=="經濟學系"
transcriptData[3]=="經濟學系" ->logicFromEcon
logicFromEcon
transcriptData[c(1,7,8)
transcriptData[c(1,7,8)]
transcriptData[c(1,7,8)] -> transcriptPartialData
transcriptData[c(1,7,8)] -> transcriptPartialData
transcriptPartialData
transcriptPartialData & logicFromEcon
names(transcriptData) -> variableNames
class(variableNames)
variableNames
transcriptData[c(1,3,7,8)]
logicFromEcon
logicFromEcon
logicFromEcon==T
sum(logicFromEcon==T)
sum(logicFromEcon==F)
transcriptPartialData
transcriptData(transcriptData)
transcriptData[logicFromEcon]
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a*b
a/b
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a*b
a/b
class(a)
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a*b
a/b
class(a)
class(b)
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a*b
a/b
class(a)
class(b)
c <- 4
c+a
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
a+b
a-b
a*b
a/b
class(a)
class(b)
a%%b
a**b
twDateTime1 <- ymd_hms("2019-03-18 14:04:00", tz="Asia/Taipei")
install.packages("lubridate")
library(lubridate)
twDateTime1 <- ymd_hms("2019-03-18 14:04:00", tz="Asia/Taipei")
twDateTime2 <- ymd_hms("2019-03-20 23:11:00", tz="Asia/Taipei")
twDateTime2-twDateTime1
knitr::opts_chunk$set(echo = TRUE)
day2-day1
day1<-ymd("2019-08-11")
day2<-ymd("2000-02-01")
day2-day1
twDateTime1 <- ymd_hms("2019-03-18 14:04:00", tz="Asia/Taipei")
twDateTime2 <- ymd_hms("2019-03-20 23:11:00", tz="Asia/Taipei")
twDateTime2-twDateTime1
class(twDateTime2-twDateTime1)
startingDate <- ymd("2000-02-17")
startingDate + year(1)
startingDate <- ymd("2000-02-17")
startingDate + years(1)
startingDate <- ymd("2000-02-17")
startingDate + years(1)   >明年此時
startingDate <- ymd("2000-02-17")
startingDate + years(1)
startingDate + dyears(1)
x4 <- c(1,5,8)
y4 <- c(5,8)
x4 %in% y4
install.packages("readr")
library(readr)
exData2 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData2.csv")
currency <- exData2$幣別
levels(currency)
levels(exData2)
class(currency)
class(currency)
currency <- as.factor(currency)
class(currency)
currency <- as.factor(currency)
class(currency)
class(currency)
currency <- as.factor(currency)
levels(currency)
japanCoin <- currency=="日圓JPY/USD"
japanCoin <- currency=="日圓JPY/USD"
japanCoin
japanCoin <- currency=="日圓JPY/USD"
sum(japanCoin)
knitr::opts_chunk$set(echo = TRUE)
sum(currency=='日圓JPY/USD')
(x5%in%greatTaipei)&(y5=="女")
x5 <- c("台北市","新北市","高雄市")
y5 <- c("女","男","女")
greatTaipei <- c("台北市","新北市")
(x5%in%greatTaipei)&(y5=="女")
(x5%in%greatTaipei)&(y5=="女")
sum((x5%in%greatTaipei)&(y5=="女"))
library(readr)
exData2 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData2.csv")
date <- as.character(exData2$期間)
currency <- exData2$幣別
exchangeRate <- exData2$匯率
date <- as.Date(date)
date <- as.Date(date)
class(date)
sum(date > ymd("1980-08-01"))
isAfter19800801 <-
date >= ymd("1980-08-01")
isAfter19800801
isAfter19800801 <-
date >= ymd("1980-08-01")
sum(isAfter19800801)
isAfter19800801 <-
date > ymd("1980-08-01")
sum(isAfter19800801)
sum(currency=="歐元USD/EUR")
is.na(exchangeRate)
sum(is.na(exchangeRate))
currency1 <- !(is.na(currency))
sum(currency1=="歐元USD/EUR")
notNA <- !(is.na(exchangeRate))
isEuro <- currency=="歐元USD/EUR")
notNA <- !(is.na(exchangeRate))
isEuro <- currency=="歐元USD/EUR"
notNA <- !(is.na(exchangeRate))
isEuro <- currency=="歐元USD/EUR"
sum(notNA & isEuro)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
courseType <- transcriptDataFinal$`必選修類別（必∕選∕通）`
major <- transcriptDataFinal$學系
studentID <- transcriptDataFinal$學號
grade <- transcriptDataFinal$學期成績
majorEco <- major=="經濟學系"
sum(majorEco)
courseType(studentID=="5bdS6977b")
sum(studentID=="5bdS6977b")
sum((studentID=="5bdS6977b")&(grade >= 60))
majorEco & courseType=="選"
sum(majorEco & courseType=="選")
a <- sum(majorEco & courseType=="必" & grade < 60)
b <- sum(majorEco & courseType=="必")
a/b
library(stringr)
install.packages("stringr")
library(stringr)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
birthday<-filmVotingData$`出生西元年月日（驗證本人用）`
head(birthday)
?str_sub
head(str_sub(birthday, start = 1, end = 4))
years <- str_sub(birthday, start = 1, end = 4)
years <- str_sub(birthday, start = 1, end = 4)
month <- str_sub(birthday, start = 5, end = 6)
day <- str_sub(birthday, start = 7, end = 8)
str_c("西元", years,"年",month,"月",day,"日")
head(str_c("西元", years,"年",month,"月",day,"日"))
str_c(民國年月, start = 1, end = 3)
str_split(民國年月,"/")
knitr::opts_chunk$set(echo = TRUE)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1<-str_sub(time1,1,3)
month1<-str_sub(time1,5,6)
year1
month1
str_sub(民國年月,1,3)
str_sub(民國年月,1,3)
str_sub(民國年月,5,6)
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1 + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1 + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year1
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year2 <- as.integer(year1) + 1911
year1 <- str_sub(民國年月,1,3)
month1 <- str_sub(民國年月,5,6)
year2 <- as.integer(year1) + 1911
year2
month1
str_c("西元",year2,"年",month1,"月")
EBirthday <- str_c("西元",year2,"年",month1,"月")
class(EBirthday)
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday <- as.date(EBirthday)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2,"-",month1,)
EBirthday <- str_c(year2, "-" ,month1,)
EBirthday <- str_c(year2,"-",month1)
library(lubridate)
EBirthday <- ym(EBirthday)
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday <- str_c("西元",year2,"年",month1,"月")
EBirthday
b1<-list("a","b",c(1:10))
typeof(b1)
a<-c(1:3)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
a<-c(
a1=1,
a2=2,
a3=3
)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1,3,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord[[2]]
studentRecord[[4]][[3]]
studentRecord[[4]][[3]]
class(studentRecord[[4]][[3]])
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
str_length(birthday) ==8
str_length(birthday) ==8
logiCorrect <- str_length(birthday) ==8
logiCorrect <- str_length(birthday) ==8
logiCorrect
logiCorrect <- str_length(birthday) ==8
logiCorrect
View(filmVotingData)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
rightBirthday <- favoriteTwo[[logiCorrect]]
rightBirthday <- favoriteTwo[logiCorrect]
rightBirthday
favoriteTwo[logiCorrect]
favoriteTwo[logiCorrect]
favoriteTwo[logiCorrect]
logiCorrect <- str_length(birthday) ==8
logiCorrect
rightFavor <- favoriteTwo[logiCorrect]
rightFavor <- favoriteTwo[logiCorrect]
rightFavor <- favoriteTwo[logiCorrect]
rightFavor
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
str_sub(timeStamp,11,12)
str_sub(timeStamp,11:12)
str_sub(timeStamp,11)
timeOut <- str_sub(timeStamp,11)
library(lubridate)
stay <-  "01:00:00" <= timeOut <= "05:00:00"
str_split(timestamp, ":")
timeStamp
head(timeStamp)
str_split(timeStamp, ":")
a<-c(
a1=1,
a2=2,
a3=3
)
typeof(a)
b1<-list("a","b",c(1:10))
typeof(b1)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
studentRecord[[2]]
studentRecord[[4]][[3]]
class(studentRecord[[4]][[3]])
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
logiCorrect <- str_length(birthday) ==8
logiCorrect
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
head(timeStamp)
str_split(timeStamp,"/", ":")
str_split(timeStamp, ":")
time1 <- str_split(timeStamp, ":")
str_sub <- (time1, 11,12)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 11,12)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 14,15)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 14:15)
time1 <- str_split(timeStamp, ":")
str_sub(time1, 11:12)
head(timeStamp)
library(lubridate)
timeStamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timeStamp <- mdy_hms(timeStamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
rightFavor <- favoriteTwo[logiCorrect]
sum(rightFavor=="別再轉台！了解電視市場問題就從經濟學開始 by Amor")
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
library(readr)
library(stringr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
as.integer(mdy_hms("12/28/2017 01:00:00"))
as.integer(timestamp)
A <= as.integer(timestamp) <= B
A <= as.integer(timestamp) <= B
A <= as.integer(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
A <- as.integer(mdy_hms("12/28/2017 01:00:00"))
B <- as.integer(mdy_hms("12/28/2017 05:00:00"))
A <= as.integer(timestamp)
(A <= as.integer(timestamp)) & (B >= as.integer(timestamp))
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
hours(timestamp,11,12)
head(timeStamp)
library(lubridate)
timestamp <- mdy_hms(timeStamp)
class(timestamp)
hours <- str_sub(timestamp,11,12)
str_sub(timestamp,11,12)
